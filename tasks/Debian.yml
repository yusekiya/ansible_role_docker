---
- name: Exit if architecture is not supported
  meta: end_play
  when: not (ansible_architecture == "x86_64" or ansible_architecture == "armv7l" or ansible_architecture == "armv6l")

- include_vars: '{{ ansible_distribution }}.yml'

- name: Remove old Docker
  apt:
    name: '{{ item }}'
    state: absent
  with_items:
    - docker
    - docker-engine
    - docker.io
  tags:
    - always

- name: Install requirements
  apt:
    name: '{{ item }}'
    state: present
  with_items: '{{ docker_required_packages }}'
  tags:
    - always

- name: Add the new GPG key
  apt_key:
    url: 'https://download.docker.com/linux/{{ ansible_lsb.id | lower }}/gpg'
    id: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'
  tags:
    - always

- name: Add apt repository | amd64
  apt_repository:
    repo:  'deb [arch=amd64] https://download.docker.com/linux/{{ ansible_lsb.id | lower }} {{ ansible_distribution_release }} stable'
    filename: 'docker'
    update_cache: yes
  when: ansible_architecture == "x86_64"
  tags:
    - always

- name: Add apt repository | armhf
  apt_repository:
    repo: 'deb [arch=armhf] https://download.docker.com/linux/{{ ansible_lsb.id | lower }} {{ ansible_distribution_release }} stable'
    filename: 'docker'
    update_cache: yes
  when: ansible_architecture == "armv7l" or ansible_architecture == "armv6l"
  tags:
    - always

- name: Install recommended packages
  apt:
    name: '{{item}}'
    state: present
    update_cache: yes
  with_items: '{{docker_recommended_packages}}'
  tags:
    - recommended

- name: Install docker
  apt:
    name: 'docker-ce'
    state: latest
    update_cache: yes
  tags:
    - always

- name: Start docker service and enable/disable it on boot
  service:
    name: docker
    state: started
    enabled: '{{docker_service_enabled}}'
  tags:
    - always

- name: Create docker group
  group:
    name: docker
  tags:
    - optional
